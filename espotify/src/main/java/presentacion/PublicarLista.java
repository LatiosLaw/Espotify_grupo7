package presentacion;

import java.util.Collection;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import logica.controladores.IControladorCliente;
import logica.controladores.IControladorListaParticular;
import logica.controladores.IControladorListaPorDefecto;
import logica.dt.DataCliente;
import logica.dt.DataListaParticular;

public class PublicarLista extends javax.swing.JPanel {

    private final IControladorListaParticular controlListPart;
    private final IControladorCliente controlCli;

    public PublicarLista(IControladorListaPorDefecto iclpd, IControladorListaParticular iclp, IControladorCliente iclc) {
        initComponents();
        controlListPart = iclp;
        controlCli = iclc;
        this.cargarClientesLst(controlCli.mostrarClientes());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnConfirmar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstLista = new javax.swing.JList<>();
        txtNombreLista = new javax.swing.JTextField();
        lblLista = new javax.swing.JLabel();
        btnBuscarN = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstListaParticular = new javax.swing.JList<>();

        setPreferredSize(new java.awt.Dimension(860, 471));

        jLabel2.setText("Nombre :");

        txtNombre.setColumns(10);

        btnConfirmar.setText("OK");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(lstLista);

        txtNombreLista.setColumns(10);

        lblLista.setText("Lista a Publicar :");

        btnBuscarN.setText("Buscar");
        btnBuscarN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNActionPerformed(evt);
            }
        });

        lstListaParticular.setMaximumSize(new java.awt.Dimension(44, 100));
        lstListaParticular.setMinimumSize(new java.awt.Dimension(44, 100));
        lstListaParticular.setPreferredSize(new java.awt.Dimension(44, 100));
        jScrollPane3.setViewportView(lstListaParticular);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarN)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(212, 212, 212)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblLista)
                                .addComponent(txtNombreLista, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(44, 44, 44)
                            .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(44, 44, 44)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(266, 266, 266))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLista)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addComponent(btnBuscarN)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        if (txtNombre.getText().equals("") || txtNombreLista.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "No debes dejar campos vacios.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (controlListPart.publicarLista(txtNombre.getText(), txtNombreLista.getText())) {
                JOptionPane.showMessageDialog(null, "La lista: '" + txtNombreLista.getText() + "' ahora es publica.",
                        "Informacion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No se encontro el cliente/lista.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnBuscarNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNActionPerformed
        if (txtNombre.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo 'Nombre' no puede estar vacio.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Collection<DataListaParticular> listas = controlListPart.devolverListadeCliente(txtNombre.getText());
            if (listas != null && !listas.isEmpty()) {
                System.out.println("Listas encontradas: " + listas.size());
                for (DataListaParticular lista : listas) {
                    System.out.println(lista.getNombre());
                    cargarListasLst(controlListPart.devolverListadeCliente(txtNombre.getText()));
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se encontraron listas para el cliente con el nickname: " + txtNombre.getText(), "Informacion", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnBuscarNActionPerformed

    public void cargarClientesLst(Collection<DataCliente> cole) {
        DefaultListModel<String> model;
        model = new DefaultListModel<>();
        for (DataCliente elemento : cole) {
            String nick = elemento.getNickname();
            model.addElement(nick);
        }
        lstLista.setModel(model);
    }

    public void cargarListasLst(Collection<DataListaParticular> cole) {
        DefaultListModel<String> model;
        model = new DefaultListModel<>();
        for (DataListaParticular elemento : cole) {
            String nombreLista = elemento.getNombre();
            model.addElement(nombreLista);
        }
        lstListaParticular.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarN;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblLista;
    private javax.swing.JList<String> lstLista;
    private javax.swing.JList<String> lstListaParticular;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreLista;
    // End of variables declaration//GEN-END:variables
}
