package presentacion;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.Collection;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import logica.controladores.IControladorAlbum;
import logica.controladores.IControladorArtista;
import logica.controladores.IControladorGenero;
import logica.controladores.IControladorTema;
import logica.dt.DataAlbum;
import logica.dt.DataGenero;
import logica.dt.DataTema;

public class ConsultaDeAlbum extends javax.swing.JPanel {

    private final IControladorAlbum controlAlb;
    private final IControladorArtista controlArt;
    private final IControladorGenero controlGen;
    private final IControladorTema controlTem;
    private DataTema tema_seleccionado;

    public ConsultaDeAlbum(IControladorAlbum icalb, IControladorArtista ica, IControladorGenero icg, IControladorTema ict) {
        controlAlb = icalb;
        controlArt = ica;
        controlGen = icg;
        controlTem = ict;
        initComponents();
        txtDireccionTema.setVisible(false);
        btnDescargarTema.setVisible(false);
        txtNomAlb.setEditable(false);
        txtAnioCre.setEditable(false);
        txtNomTemAlb.setEditable(false);
        txtDurTem.setEditable(false);
        txtDireccionTema.setEditable(false);
        txtDireccionTema.setVisible(true);
        jLabel1.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblConAlb = new javax.swing.JLabel();
        cbxConAlb = new javax.swing.JComboBox<>();
        txtNomAlb = new javax.swing.JTextField();
        txtAnioCre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listGenAlb = new javax.swing.JList<>();
        lblGenDeAlb = new javax.swing.JLabel();
        lblTemDeAlb = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listTemAlb = new javax.swing.JList<>();
        txtDireccionTema = new javax.swing.JTextField();
        txtDurTem = new javax.swing.JTextField();
        lblDurTem = new javax.swing.JLabel();
        fotoAlb = new java.awt.Panel();
        txtIMAGEN_AFUTURO = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listGenOrArt = new javax.swing.JList<>();
        btnMostrarAlb = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        listAlb = new javax.swing.JList<>();
        nomGenOrArt = new javax.swing.JTextField();
        jLabelInput = new javax.swing.JLabel();
        btnDescargarTema = new javax.swing.JButton();
        nomAlbum = new javax.swing.JTextField();
        jLabelAlbum = new javax.swing.JLabel();
        txtNomTemAlb = new javax.swing.JTextField();
        btnGenConsult1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(860, 471));

        lblConAlb.setText("Consultar Album :");

        cbxConAlb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OPT", "Genero", "Artista" }));
        cbxConAlb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxConAlbActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listGenAlb);

        lblGenDeAlb.setText("Generos del Album :");

        lblTemDeAlb.setText("Temas del Album :");

        listTemAlb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTemAlbMouseClicked(evt);
            }
        });
        listTemAlb.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listTemAlbValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listTemAlb);

        txtDireccionTema.setToolTipText("Haz clic para copiar el enlace!");
        txtDireccionTema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDireccionTemaMouseClicked(evt);
            }
        });
        txtDireccionTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionTemaActionPerformed(evt);
            }
        });

        lblDurTem.setText("Duracion :");

        fotoAlb.setBackground(new java.awt.Color(204, 204, 204));
        fotoAlb.setPreferredSize(new java.awt.Dimension(149, 149));

        txtIMAGEN_AFUTURO.setForeground(new java.awt.Color(0, 0, 0));
        txtIMAGEN_AFUTURO.setText("IMAGEN");

        javax.swing.GroupLayout fotoAlbLayout = new javax.swing.GroupLayout(fotoAlb);
        fotoAlb.setLayout(fotoAlbLayout);
        fotoAlbLayout.setHorizontalGroup(
            fotoAlbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fotoAlbLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(txtIMAGEN_AFUTURO)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        fotoAlbLayout.setVerticalGroup(
            fotoAlbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fotoAlbLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(txtIMAGEN_AFUTURO)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(listGenOrArt);

        btnMostrarAlb.setText("Mostrar Albumes");
        btnMostrarAlb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarAlbActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(listAlb);

        nomGenOrArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomGenOrArtActionPerformed(evt);
            }
        });

        jLabelInput.setText("Genero o Artista :");

        btnDescargarTema.setText("Descargar Tema");
        btnDescargarTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarTemaActionPerformed(evt);
            }
        });

        nomAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomAlbumActionPerformed(evt);
            }
        });

        jLabelAlbum.setText("Album :");

        btnGenConsult1.setText("Mostrar Datos");
        btnGenConsult1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenConsult1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Link del Tema : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelInput)
                    .addComponent(btnMostrarAlb)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(nomGenOrArt)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblConAlb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxConAlb, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnGenConsult1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomAlbum)
                    .addComponent(jLabelAlbum))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDireccionTema, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(btnDescargarTema, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addComponent(fotoAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTemDeAlb)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDurTem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDurTem, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                            .addComponent(txtAnioCre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(lblGenDeAlb)
                            .addComponent(txtNomAlb)
                            .addComponent(txtNomTemAlb))))
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fotoAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNomAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAnioCre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblGenDeAlb, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTemDeAlb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomTemAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDurTem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDurTem)
                            .addComponent(btnDescargarTema))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccionTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblConAlb)
                            .addComponent(cbxConAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomGenOrArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMostrarAlb)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenConsult1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nomGenOrArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomGenOrArtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomGenOrArtActionPerformed

    private void btnDescargarTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarTemaActionPerformed
        Path sourcePath = Paths.get("espotify/src/main/java/temas/" + tema_seleccionado.getArchivo());
        String userHome = System.getProperty("user.home");
        Path descargas = Paths.get(userHome, "Downloads");
        Path destino = descargas.resolve(tema_seleccionado.getArchivo());
        try {
            // Copiar el archivo al directorio de destino
            Files.copy(sourcePath, destino, StandardCopyOption.REPLACE_EXISTING);
            System.out.println("Archivo copiado con exito.");
            JOptionPane.showMessageDialog(null, "Archivo de musica descargado correctamente.\nVerifique su carpeta de descargas");
        } catch (Exception e) {
            System.err.println("Error al copiar el archivo: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Un error ha ocurrido al descargar el archivo.");
        }
    }//GEN-LAST:event_btnDescargarTemaActionPerformed

    private void cargarGenerosDelAlbum(String nombre_album) {
        Collection<DataGenero> generos_del_album = controlGen.darGenerosDelAlbum(nombre_album);
        DefaultListModel<String> model = new DefaultListModel();
        Iterator<DataGenero> iterator = generos_del_album.iterator();
        while (iterator.hasNext()) {
            DataGenero genero_actual = iterator.next();
            model.addElement(genero_actual.getNombre());
        }
        listGenAlb.setModel(model);
    }

    private void cargarTemasDelAlbum(String nombre_album) {
        Collection<DataTema> temas_del_album = controlTem.retornarTemasDeAlbum(nombre_album);
        DefaultListModel<String> model = new DefaultListModel();
        Iterator<DataTema> iterator = temas_del_album.iterator();
        while (iterator.hasNext()) {
            DataTema tema_actual = iterator.next();
            model.addElement(tema_actual.getNickname());
        }
        listTemAlb.setModel(model);
    }

    private void cbxConAlbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxConAlbActionPerformed
        int token = cbxConAlb.getSelectedIndex();
        switch (token) {
            case 0, 1 -> {
                reinicarAlbumInfo();
                cargarGeneros();
            }
            case 2 -> {
                reinicarAlbumInfo();
                cargarArtistas();
            }
        }
    }//GEN-LAST:event_cbxConAlbActionPerformed

    private void cargarGeneros() {
        DefaultListModel<String> model = new DefaultListModel();
        Collection<String> retorno = controlGen.mostrarGeneros();
        Iterator<String> iterator = retorno.iterator();
        while (iterator.hasNext()) {
            model.addElement(iterator.next());
        }
        listGenOrArt.setModel(model);
    }

    private void cargarArtistas() {
        DefaultListModel<String> model = new DefaultListModel();
        Collection<String> retorno = controlArt.mostrarNicksArtistas();
        Iterator<String> iterator = retorno.iterator();
        while (iterator.hasNext()) {
            model.addElement(iterator.next());
        }
        listGenOrArt.setModel(model);
    }

    private void reinicarAlbumInfo() {
        DefaultListModel<String> model = new DefaultListModel();
        listAlb.setModel(model);
    }

    private void btnMostrarAlbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarAlbActionPerformed
        switch (cbxConAlb.getSelectedIndex()) {
            case 0 ->
                JOptionPane.showMessageDialog(null, "Seleccione si quiere buscar albumes por Generos o Artistas.");
            case 1 -> {
                if (!nomGenOrArt.getText().isEmpty()) {
                    DefaultListModel<String> model = new DefaultListModel();
                    Collection<String> retorno = controlAlb.retornarAlbumsDelGenero(nomGenOrArt.getText());
                    Iterator<String> iterator = retorno.iterator();
                    while (iterator.hasNext()) {
                        model.addElement(iterator.next());
                    }
                    listAlb.setModel(model);
                } else {
                    JOptionPane.showMessageDialog(null, "Especifique el genero en el formulario.");
                }
            }
            default -> {
                if (!nomGenOrArt.getText().isEmpty()) {
                    DefaultListModel<String> model = new DefaultListModel();
                    Collection<String> retorno = controlAlb.retornarAlbumsDelArtista(nomGenOrArt.getText());
                    Iterator<String> iterator = retorno.iterator();
                    while (iterator.hasNext()) {
                        model.addElement(iterator.next());
                    }
                    listAlb.setModel(model);
                } else {
                    JOptionPane.showMessageDialog(null, "Especifique el artista en el formulario.");
                }
            }
        }
    }//GEN-LAST:event_btnMostrarAlbActionPerformed

    private void nomAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomAlbumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomAlbumActionPerformed

    private void listTemAlbValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listTemAlbValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_listTemAlbValueChanged

    private void listTemAlbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTemAlbMouseClicked
        String nomtem = listTemAlb.getSelectedValue();
        tema_seleccionado = controlTem.retornarTema(nomtem);
        txtNomTemAlb.setText(tema_seleccionado.getNickname());
        if (tema_seleccionado.getArchivo() != null) {
            btnDescargarTema.setVisible(true);
            txtDireccionTema.setText(tema_seleccionado.getAccess());
        } else {
            btnDescargarTema.setVisible(false);
            txtDireccionTema.setText(tema_seleccionado.getAccess());
        }
        if (tema_seleccionado.getDuracion() != 0) {
            txtDurTem.setText(convertirSegundos(tema_seleccionado.getDuracion()));
        } else {
            txtDurTem.setText(" - ");
        }
    }//GEN-LAST:event_listTemAlbMouseClicked

    public String convertirSegundos(int totalSegundos) {
    int minutos = totalSegundos / 60;
    int segundos = totalSegundos % 60;
    // Formatear los segundos para que siempre tengan 2 dígitos
    return String.format("%d:%02d", minutos, segundos);
    }
    
    private void txtDireccionTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionTemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionTemaActionPerformed

    private void btnGenConsult1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenConsult1ActionPerformed
        if (!nomAlbum.getText().isEmpty()) {
            DataAlbum album = controlAlb.retornarInfoAlbum(nomAlbum.getText());
            txtNomAlb.setText(album.getNombre());
            txtAnioCre.setText(Integer.toString(album.getAnioCreacion()));
            cargarGenerosDelAlbum(album.getNombre());
            cargarTemasDelAlbum(album.getNombre());
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, introduzca el album del que quiere saber la informacion en el formulario.");
        }
    }//GEN-LAST:event_btnGenConsult1ActionPerformed

    private void txtDireccionTemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionTemaMouseClicked
        StringSelection stringSelection = new StringSelection(txtDireccionTema.getText());
        // Obtener el portapapeles del sistema
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        // Copiar el texto al portapapeles
        clipboard.setContents(stringSelection, null);
        JOptionPane.showMessageDialog(null, "Enlace copiado al portapapeles.");
    }//GEN-LAST:event_txtDireccionTemaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDescargarTema;
    private javax.swing.JButton btnGenConsult1;
    private javax.swing.JButton btnMostrarAlb;
    private javax.swing.JComboBox<String> cbxConAlb;
    private java.awt.Panel fotoAlb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAlbum;
    private javax.swing.JLabel jLabelInput;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblConAlb;
    private javax.swing.JLabel lblDurTem;
    private javax.swing.JLabel lblGenDeAlb;
    private javax.swing.JLabel lblTemDeAlb;
    private javax.swing.JList<String> listAlb;
    private javax.swing.JList<String> listGenAlb;
    private javax.swing.JList<String> listGenOrArt;
    private javax.swing.JList<String> listTemAlb;
    private javax.swing.JTextField nomAlbum;
    private javax.swing.JTextField nomGenOrArt;
    private javax.swing.JTextField txtAnioCre;
    private javax.swing.JTextField txtDireccionTema;
    private javax.swing.JTextField txtDurTem;
    private javax.swing.JLabel txtIMAGEN_AFUTURO;
    private javax.swing.JTextField txtNomAlb;
    private javax.swing.JTextField txtNomTemAlb;
    // End of variables declaration//GEN-END:variables
}
