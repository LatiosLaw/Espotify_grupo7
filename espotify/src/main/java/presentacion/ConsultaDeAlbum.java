/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package presentacion;

import java.util.Collection;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import logica.controladores.IControladorAlbum;
import logica.controladores.IControladorArtista;
import logica.controladores.IControladorGenero;
import logica.controladores.IControladorTema;
import logica.dt.DataAlbum;
import logica.dt.DataGenero;
import logica.dt.DataTema;

/**
 *
 * @author Tabar√© 8031
 */
public class ConsultaDeAlbum extends javax.swing.JPanel {

    /**
     * Creates new form ConsultaDeAlbum
     */
    private IControladorAlbum controlAlb;
    private IControladorArtista controlArt;
    private IControladorGenero controlGen;
    private IControladorTema controlTem;
    
    public ConsultaDeAlbum(IControladorAlbum icalb, IControladorArtista ica, IControladorGenero icg, IControladorTema ict) {
        controlAlb = icalb;
        controlArt = ica;
        controlGen = icg;
        controlTem = ict;
        
        initComponents();
        txtDireccionTema.setVisible(false);
        btnDescargarTema.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblConAlb = new javax.swing.JLabel();
        cbxConAlb = new javax.swing.JComboBox<>();
        txtNomAlb = new javax.swing.JTextField();
        txtAnioCre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listGenAlb = new javax.swing.JList<>();
        lblGenDeAlb = new javax.swing.JLabel();
        lblTemDeAlb = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listTemAlb = new javax.swing.JList<>();
        txtDireccionTema = new javax.swing.JTextField();
        txtDurTem = new javax.swing.JTextField();
        lblDurTem = new javax.swing.JLabel();
        fotoAlb = new java.awt.Panel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listGenOrArt = new javax.swing.JList<>();
        btnMostrarAlb = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        listAlb = new javax.swing.JList<>();
        nomGenOrArt = new javax.swing.JTextField();
        jLabelInput = new javax.swing.JLabel();
        btnDescargarTema = new javax.swing.JButton();
        nomAlbum = new javax.swing.JTextField();
        jLabelAlbum = new javax.swing.JLabel();
        txtNomTemAlb = new javax.swing.JTextField();
        btnGenConsult1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(860, 471));

        lblConAlb.setText("Consular Album:");

        cbxConAlb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OPT", "Genero", "Artista" }));
        cbxConAlb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxConAlbActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listGenAlb);

        lblGenDeAlb.setText("Generos del album");

        lblTemDeAlb.setText("Temas del album");

        listTemAlb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTemAlbMouseClicked(evt);
            }
        });
        listTemAlb.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listTemAlbValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listTemAlb);

        txtDireccionTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionTemaActionPerformed(evt);
            }
        });

        lblDurTem.setText("Duracion :");

        fotoAlb.setBackground(new java.awt.Color(255, 102, 102));
        fotoAlb.setPreferredSize(new java.awt.Dimension(149, 149));

        javax.swing.GroupLayout fotoAlbLayout = new javax.swing.GroupLayout(fotoAlb);
        fotoAlb.setLayout(fotoAlbLayout);
        fotoAlbLayout.setHorizontalGroup(
            fotoAlbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 149, Short.MAX_VALUE)
        );
        fotoAlbLayout.setVerticalGroup(
            fotoAlbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 149, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(listGenOrArt);

        btnMostrarAlb.setText("Mostrar Albumes");
        btnMostrarAlb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarAlbActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(listAlb);

        nomGenOrArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomGenOrArtActionPerformed(evt);
            }
        });

        jLabelInput.setText("Introduzca el genero o artista :");

        btnDescargarTema.setText("Descargar Tema");
        btnDescargarTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarTemaActionPerformed(evt);
            }
        });

        nomAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomAlbumActionPerformed(evt);
            }
        });

        jLabelAlbum.setText("Introduzca el album :");

        btnGenConsult1.setText("Mostrar Datos");
        btnGenConsult1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenConsult1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblConAlb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxConAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(nomGenOrArt, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelInput, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnMostrarAlb, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(nomAlbum, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelAlbum, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGenDeAlb)
                            .addComponent(txtNomAlb, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtAnioCre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fotoAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTemDeAlb))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblDurTem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDurTem, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDireccionTema)
                                    .addComponent(btnDescargarTema, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(txtNomTemAlb, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(106, 106, 106))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(218, 218, 218)
                    .addComponent(btnGenConsult1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(516, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblConAlb)
                            .addComponent(cbxConAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelInput)
                        .addGap(4, 4, 4)
                        .addComponent(nomGenOrArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrarAlb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAlbum)
                        .addGap(4, 4, 4)
                        .addComponent(nomAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNomAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAnioCre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblGenDeAlb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(fotoAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblTemDeAlb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNomTemAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDurTem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDurTem))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDireccionTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDescargarTema))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(404, 404, 404)
                    .addComponent(btnGenConsult1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(19, 19, 19)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nomGenOrArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomGenOrArtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomGenOrArtActionPerformed

    private void btnDescargarTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarTemaActionPerformed
        
    }//GEN-LAST:event_btnDescargarTemaActionPerformed

    private void cargarGenerosDelAlbum(String nombre_album){
        Collection<DataGenero> generos_del_album = controlGen.darGenerosDelAlbum(nombre_album);
        DefaultListModel<String> model = new DefaultListModel();
                Iterator<DataGenero> iterator = generos_del_album.iterator();
                while (iterator.hasNext()) {
                    DataGenero genero_actual = iterator.next();
                    model.addElement(genero_actual.getNombre());
                }
        listGenAlb.setModel(model);
    }
    
    private void cargarTemasDelAlbum(String nombre_album){
        Collection<DataTema> temas_del_album = controlTem.retornarTemasDeAlbum(nombre_album);
        DefaultListModel<String> model = new DefaultListModel();
                Iterator<DataTema> iterator = temas_del_album.iterator();
                while (iterator.hasNext()) {
                    DataTema tema_actual = iterator.next();
                    model.addElement(tema_actual.getNickname());
                }
        listTemAlb.setModel(model);
    }
    
    private void cbxConAlbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxConAlbActionPerformed
        int token = cbxConAlb.getSelectedIndex();
       
        switch (token) {
         case 0:
                 
               jLabelInput.setText("Introduzca el genero o artista :");
               
            case 1:
               jLabelInput.setText("Introduzca el genero :");
               reinicarAlbumInfo();
                cargarGeneros();
                break;
            case 2:
               jLabelInput.setText("Introduzca el artista :");
               reinicarAlbumInfo();
                cargarArtistas();
                break;    
    }                 
    }//GEN-LAST:event_cbxConAlbActionPerformed

    private void cargarGeneros(){
        DefaultListModel<String> model = new DefaultListModel();
        Collection<String> retorno = controlGen.mostrarGeneros();
                Iterator<String> iterator = retorno.iterator();
                while (iterator.hasNext()) {
                    model.addElement(iterator.next());
                }
        listGenOrArt.setModel(model);
    }
    
    private void cargarArtistas(){
        DefaultListModel<String> model = new DefaultListModel();
        Collection<String> retorno = controlArt.mostrarNicksArtistas();
                Iterator<String> iterator = retorno.iterator();
                while (iterator.hasNext()) {
                    model.addElement(iterator.next());
                }
        listGenOrArt.setModel(model);
    }
    
    private void reinicarAlbumInfo(){
        DefaultListModel<String> model = new DefaultListModel();
        listAlb.setModel(model);
    }
    
    private void btnMostrarAlbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarAlbActionPerformed
       if(cbxConAlb.getSelectedIndex()==0){
           
       }else if(cbxConAlb.getSelectedIndex()==1){
           DefaultListModel<String> model = new DefaultListModel();
        Collection<String> retorno = controlAlb.retornarAlbumsDelGenero(nomGenOrArt.getText());
                Iterator<String> iterator = retorno.iterator();
                while (iterator.hasNext()) {
                    model.addElement(iterator.next());
                }
        listAlb.setModel(model);
       }else{
           DefaultListModel<String> model = new DefaultListModel();
        Collection<String> retorno = controlAlb.retornarAlbumsDelArtista(nomGenOrArt.getText());
                Iterator<String> iterator = retorno.iterator();
                while (iterator.hasNext()) {
                    model.addElement(iterator.next());
                }
        listAlb.setModel(model);
       }
    }//GEN-LAST:event_btnMostrarAlbActionPerformed

    private void nomAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomAlbumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomAlbumActionPerformed

    private void listTemAlbValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listTemAlbValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_listTemAlbValueChanged

    private void listTemAlbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTemAlbMouseClicked
        String nomtem = listTemAlb.getSelectedValue();
        DataTema tema_retornado = controlTem.retornarTema(nomtem);
        txtNomTemAlb.setText(tema_retornado.getNickname());
        
        if(!tema_retornado.getAccess().endsWith(".mp3")){
            txtDireccionTema.setVisible(true);
            btnDescargarTema.setVisible(false);
            txtDireccionTema.setText(tema_retornado.getAccess());
            
        }else{
            txtDireccionTema.setVisible(false);
            btnDescargarTema.setVisible(true);
    }
        if(tema_retornado.getDuracion()!= 0){
            txtDurTem.setText(Integer.toString(tema_retornado.getDuracion()));
        }else{
            txtDurTem.setText(" - ");
        }
    }//GEN-LAST:event_listTemAlbMouseClicked

    private void txtDireccionTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionTemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionTemaActionPerformed

    private void btnGenConsult1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenConsult1ActionPerformed
        DataAlbum album = controlAlb.retornarInfoAlbum(nomAlbum.getText());
        txtNomAlb.setText(album.getNombre());
        txtAnioCre.setText(Integer.toString(album.getAnioCreacion()));
        cargarGenerosDelAlbum(album.getNombre());
        cargarTemasDelAlbum(album.getNombre());
    }//GEN-LAST:event_btnGenConsult1ActionPerformed
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDescargarTema;
    private javax.swing.JButton btnGenConsult1;
    private javax.swing.JButton btnMostrarAlb;
    private javax.swing.JComboBox<String> cbxConAlb;
    private java.awt.Panel fotoAlb;
    private javax.swing.JLabel jLabelAlbum;
    private javax.swing.JLabel jLabelInput;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblConAlb;
    private javax.swing.JLabel lblDurTem;
    private javax.swing.JLabel lblGenDeAlb;
    private javax.swing.JLabel lblTemDeAlb;
    private javax.swing.JList<String> listAlb;
    private javax.swing.JList<String> listGenAlb;
    private javax.swing.JList<String> listGenOrArt;
    private javax.swing.JList<String> listTemAlb;
    private javax.swing.JTextField nomAlbum;
    private javax.swing.JTextField nomGenOrArt;
    private javax.swing.JTextField txtAnioCre;
    private javax.swing.JTextField txtDireccionTema;
    private javax.swing.JTextField txtDurTem;
    private javax.swing.JTextField txtNomAlb;
    private javax.swing.JTextField txtNomTemAlb;
    // End of variables declaration//GEN-END:variables
}
