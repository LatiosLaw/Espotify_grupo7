package presentacion;

import java.awt.Component;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import logica.controladores.IControladorCliente;
import logica.controladores.IControladorArtista;

public class AgregarUsuario extends javax.swing.JPanel {

    private final IControladorCliente controlCli;
    private final IControladorArtista controlArt;
    private Component lblMsjArch;
    private final JFileChooser fileChooserImagen;

    public AgregarUsuario(IControladorCliente icc, IControladorArtista ica) {
        controlCli = icc;
        controlArt = ica;
        initComponents();
        fileChooserImagen = new JFileChooser();
        fileChooserImagen.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooserImagen.setDialogTitle("Selecciona una imagen de perfil");
        fileChooserImagen.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Imagenes (JPG, PNG)", "jpg", "png"));
        lblDirWeb.setVisible(false);
        txtDirWeb.setVisible(false);
        txtaBio.setVisible(false);
        lblBiografia.setVisible(false);
        this.sprFecha.setEnabled(true);
        ((DefaultEditor) sprFecha.getEditor()).getTextField().setEditable(false);

         txtcontraseña.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                verificarContra();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                verificarContra();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                verificarContra();
            }
        });
         
         txtVercontraseña.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                verificarContra();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                verificarContra();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                verificarContra();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sprFecha = new javax.swing.JSpinner();
        lblFechaNaci = new javax.swing.JLabel();
        txtNickName = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        cbxTipoUsr = new javax.swing.JComboBox<>();
        lblBiografia = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaBio = new javax.swing.JTextArea();
        lblDirWeb = new javax.swing.JLabel();
        txtDirWeb = new javax.swing.JTextField();
        btnConfirmar = new javax.swing.JButton();
        lblIMGG = new javax.swing.JLabel();
        lblIMGG1 = new javax.swing.JLabel();
        jButtonImagen = new javax.swing.JButton();
        lblContra = new javax.swing.JLabel();
        lbVerContra = new javax.swing.JLabel();
        txtVercontraseña = new javax.swing.JPasswordField();
        txtcontraseña = new javax.swing.JPasswordField();
        lblVerificacion = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(860, 471));

        jLabel1.setText("Nickname :");

        jLabel2.setText("Nombre :");

        jLabel3.setText("Apellido :");

        jLabel4.setText("Correo :");

        sprFecha.setModel(new javax.swing.SpinnerDateModel());
        sprFecha.setEditor(new javax.swing.JSpinner.DateEditor(sprFecha, "dd.MM.yyyy"));

        lblFechaNaci.setText("Fecha Nacimiento :");

        txtNickName.setColumns(10);
        txtNickName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNickNameActionPerformed(evt);
            }
        });

        txtNombre.setColumns(10);

        txtApellido.setColumns(10);

        txtCorreo.setColumns(10);

        cbxTipoUsr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OPT", "Cliente", "Artista" }));
        cbxTipoUsr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoUsrActionPerformed(evt);
            }
        });

        lblBiografia.setText("Biografia :");

        txtaBio.setColumns(20);
        txtaBio.setLineWrap(true);
        txtaBio.setRows(5);
        jScrollPane1.setViewportView(txtaBio);

        lblDirWeb.setText("Direccion Web :");

        txtDirWeb.setColumns(10);

        btnConfirmar.setText("Subir Usuario");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        lblIMGG.setText("Imagen Perfil :");

        lblIMGG1.setText("Tipo de Usuario :");

        jButtonImagen.setText("Subir");
        jButtonImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImagenActionPerformed(evt);
            }
        });

        lblContra.setText("Contraseña : ");

        lbVerContra.setText("Verifique Contraseña : ");

        txtVercontraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVercontraseñaActionPerformed(evt);
            }
        });

        txtcontraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcontraseñaActionPerformed(evt);
            }
        });

        lblVerificacion.setText("Por favor, ingrese una contraseña.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDirWeb)
                            .addComponent(lblBiografia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDirWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbVerContra, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(526, 526, 526))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblContra)
                                .addGap(553, 553, 553))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblVerificacion)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblIMGG)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButtonImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(61, 61, 61)
                                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(344, 344, 344))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblIMGG1)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbxTipoUsr, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFechaNaci)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sprFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(57, 57, 57)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                                .addComponent(txtNickName))
                                            .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(txtcontraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVercontraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(214, 214, 214))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDirWeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDirWeb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBiografia)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNickName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblContra)
                            .addComponent(txtcontraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbVerContra)
                            .addComponent(txtVercontraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(lblVerificacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonImagen)
                    .addComponent(lblIMGG))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFechaNaci)
                            .addComponent(sprFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIMGG1)
                            .addComponent(cbxTipoUsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        if (cbxTipoUsr.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(lblMsjArch, "Por favor, seleccione el tipo de usuario.");
        } else {
            String pattern = "MM/dd/yyyy";
            DateFormat df = new SimpleDateFormat(pattern);
            Date today = (Date) sprFecha.getValue();
            String fechaString = df.format(today);
            System.out.println("Today is: " + fechaString);
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
            LocalDate fechaFinal = LocalDate.parse(fechaString, formatter);
            String nick = txtNickName.getText();
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            char[] password = txtcontraseña.getPassword();
            char[] passwordVeri = txtVercontraseña.getPassword();
            String passwordText = new String(password);
            String passwordVeriText = new String(passwordVeri);
            String correo = txtCorreo.getText();
            File selectedFile = fileChooserImagen.getSelectedFile();
            System.out.println("Converted LocalDate: " + fechaFinal);
            if (txtNickName.getText().isEmpty() != true && txtNombre.getText().isEmpty() != true && txtApellido.getText().isEmpty() != true && txtCorreo.getText().isEmpty() != true && password.length != 0 && passwordVeri.length != 0 && passwordText.equals(passwordVeriText)) {
                if (cbxTipoUsr.getSelectedIndex() == 2) {
                    String biografia = txtaBio.getText();
                    String webPag = txtDirWeb.getText();
                    if (txtaBio.getText().isEmpty() != true && txtDirWeb.getText().isEmpty() != true) {
                        if (selectedFile==null) {
                            if (controlArt.agregarArtista(nick, nombre, apellido, passwordText, correo, "default", fechaFinal, biografia, webPag).getValor()) {
                                JOptionPane.showMessageDialog(lblMsjArch, "Artista agregado correctamente.");
                                vaciarCampos();
                            } else {
                                if (controlArt.agregarArtista(nick, nombre, apellido, passwordText, correo, "default", fechaFinal, biografia, webPag).getNumero() == 1) {
                                    JOptionPane.showMessageDialog(lblMsjArch, "El nickname del usuario ya esta en uso, por favor, elija otro.");
                                } else {
                                    JOptionPane.showMessageDialog(lblMsjArch, "El correo ya esta en uso, por favor, elija otro.");
                                }
                            }
                        } else {
                            if (controlArt.agregarArtista(nick, nombre, apellido, passwordText, correo, selectedFile.getName(), fechaFinal, biografia, webPag).getValor()) {
                                JOptionPane.showMessageDialog(lblMsjArch, "Artista agregado correctamente.");
                            } else {
                                if (controlArt.agregarArtista(nick, nombre, apellido, passwordText, correo, selectedFile.getName(), fechaFinal, biografia, webPag).getNumero() == 1) {
                                    JOptionPane.showMessageDialog(lblMsjArch, "El nickname del usuario ya esta en uso, por favor, elija otro.");
                                } else {
                                    JOptionPane.showMessageDialog(lblMsjArch, "El correo ya esta en uso, por favor, elija otro.");
                                }
                            }
                            if (fileChooserImagen.getSelectedFile() != null) {
                    selectedFile = fileChooserImagen.getSelectedFile();
                    File destinationDir = new File("espotify\\src\\main\\java\\imagenes\\perfiles");
                    if (!destinationDir.exists()) {
                        destinationDir.mkdirs(); // Crear la carpeta si no existe
                    }
                    // Crear el archivo de destino con el mismo nombre que el seleccionado
                    File destinationFile = new File(destinationDir, selectedFile.getName());
                    try{
                        Files.copy(selectedFile.toPath(), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                        System.out.println("Archivo guardado exitosamente en: " + destinationFile.getAbsolutePath());
                    }catch(Exception e){
                        System.out.println("Un error ha ocurrido");
                    }
                        }
                        vaciarCampos();
                        }
                    } else {
                        JOptionPane.showMessageDialog(lblMsjArch, "Por favor, completa los campos de biografia y direccion web correctamente.");
                    }
                } else {
                    if (selectedFile==null) {
                        if (controlCli.agregarCliente(nick, nombre, apellido, passwordText, correo, "default", fechaFinal).getValor() == true) {
                            JOptionPane.showMessageDialog(lblMsjArch, "Cliente agregado correctamente.");
                            vaciarCampos();
                        } else {
                            if (controlCli.agregarCliente(nick, nombre, apellido, passwordText, correo, "default", fechaFinal).getNumero() == 1) {
                                JOptionPane.showMessageDialog(lblMsjArch, "El nickname del usuario ya esta en uso, por favor, elija otro.");
                            } else {
                                JOptionPane.showMessageDialog(lblMsjArch, "El correo ya esta en uso, por favor, elija otro.");
                            }
                        }
                    } else {
                        if (controlCli.agregarCliente(nick, nombre, apellido, passwordText, correo, selectedFile.getName(), fechaFinal).getValor() == true) {
                            JOptionPane.showMessageDialog(lblMsjArch, "Cliente agregado correctamente.");
                        } else {
                            if (controlCli.agregarCliente(nick, nombre, apellido, passwordText, correo, selectedFile.getName(), fechaFinal).getNumero() == 1) {
                                JOptionPane.showMessageDialog(lblMsjArch, "El nickname del usuario ya esta en uso, por favor, elija otro.");
                            } else {
                                JOptionPane.showMessageDialog(lblMsjArch, "El correo ya esta en uso, por favor, elija otro.");
                            }
                        }
                        if (fileChooserImagen.getSelectedFile() != null) {
                    selectedFile = fileChooserImagen.getSelectedFile();
                    File destinationDir = new File("espotify\\src\\main\\java\\imagenes\\perfiles");
                    if (!destinationDir.exists()) {
                        destinationDir.mkdirs(); // Crear la carpeta si no existe
                    }
                    // Crear el archivo de destino con el mismo nombre que el seleccionado
                    File destinationFile = new File(destinationDir, selectedFile.getName());
                    try{
                        Files.copy(selectedFile.toPath(), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                        System.out.println("Archivo guardado exitosamente en: " + destinationFile.getAbsolutePath());
                    }catch(Exception e){
                        System.out.println("Un error ha ocurrido");
                    }
                        }
                        vaciarCampos();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(lblMsjArch, "Por favor, completa los campos del formulario.");
            }
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void verificarContra() {
        char[] password = txtcontraseña.getPassword();
        String passwordText = new String(password);
        if(passwordText=="" || password.length==0){
            lblVerificacion.setText("Por favor, ingrese una contraseña.");
        }else{
            char[] passwordVer = txtVercontraseña.getPassword();
            String passwordVerText = new String(passwordVer);
            if(passwordText.equals(passwordVerText)){
                lblVerificacion.setText("Contraseñas coinciden.");
            }else{
                lblVerificacion.setText("Las contraseñas no coinciden.");
            }
        }
    }

    private void vaciarCampos() {
        txtNickName.setText(null);
        txtNombre.setText(null);
        txtCorreo.setText(null);
        fileChooserImagen.setSelectedFile(null);
        jButtonImagen.setText("Subir");
        txtApellido.setText(null);
        txtDirWeb.setText(null);
        txtaBio.setText(null);
        txtcontraseña.setText(null);
        txtVercontraseña.setText(null);      
        cbxTipoUsr.setSelectedIndex(0);
    }

    private void txtNickNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNickNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNickNameActionPerformed

    private void cbxTipoUsrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoUsrActionPerformed
        int token = cbxTipoUsr.getSelectedIndex();
        switch (token) {
            case 0:
                lblDirWeb.setVisible(false);
                txtDirWeb.setVisible(false);
                txtaBio.setVisible(false);
                lblBiografia.setVisible(false);
            case 1:
                lblDirWeb.setVisible(false);
                txtDirWeb.setVisible(false);
                txtaBio.setVisible(false);
                lblBiografia.setVisible(false);
                break;
            case 2:
                lblDirWeb.setVisible(true);
                txtDirWeb.setVisible(true);
                txtaBio.setVisible(true);
                lblBiografia.setVisible(true);
                break;
    }//GEN-LAST:event_cbxTipoUsrActionPerformed
    }
    
    private void jButtonImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImagenActionPerformed
        int result = fileChooserImagen.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooserImagen.getSelectedFile();
            if (selectedFile.getName().endsWith(".png") || selectedFile.getName().endsWith(".jpg")) {
                jButtonImagen.setText("Imagen: " + selectedFile.getName());
            } else {
                jButtonImagen.setText("Subir");
            }
        }
    }//GEN-LAST:event_jButtonImagenActionPerformed

    private void txtcontraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcontraseñaActionPerformed

    }//GEN-LAST:event_txtcontraseñaActionPerformed

    private void txtVercontraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVercontraseñaActionPerformed

    }//GEN-LAST:event_txtVercontraseñaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JComboBox<String> cbxTipoUsr;
    private javax.swing.JButton jButtonImagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbVerContra;
    private javax.swing.JLabel lblBiografia;
    private javax.swing.JLabel lblContra;
    private javax.swing.JLabel lblDirWeb;
    private javax.swing.JLabel lblFechaNaci;
    private javax.swing.JLabel lblIMGG;
    private javax.swing.JLabel lblIMGG1;
    private javax.swing.JLabel lblVerificacion;
    private javax.swing.JSpinner sprFecha;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDirWeb;
    private javax.swing.JTextField txtNickName;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtVercontraseña;
    private javax.swing.JTextArea txtaBio;
    private javax.swing.JPasswordField txtcontraseña;
    // End of variables declaration//GEN-END:variables
}
