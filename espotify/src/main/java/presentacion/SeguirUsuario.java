package presentacion;

import java.util.Collection;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import logica.controladores.IControladorCliente;
import logica.dt.DataCliente;

public class SeguirUsuario extends javax.swing.JPanel {

    private IControladorCliente controlCli;
    String selectedClient;
    String selectedUser;

    public SeguirUsuario(IControladorCliente controlador) {
        initComponents();
        this.controlCli = controlador;
        this.cargarClientesLst(controlCli.mostrarClientes());
        this.cargarUsuariosLst(controlCli.mostrarUsuarios());
        
        lstClientes.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Evitar acciones repetidas cuando la selección sigue cambiando
                if (!e.getValueIsAdjusting()) {
                    // Obtener el nombre seleccionado
                    selectedClient = lstClientes.getSelectedValue();
                    txtCliente.setText(selectedClient);
                }
            }
        });
        
        lstUsuarios.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Evitar acciones repetidas cuando la selección sigue cambiando
                if (!e.getValueIsAdjusting()) {
                    // Obtener el nombre seleccionado
                    selectedUser = lstUsuarios.getSelectedValue();
                    txtUsuarioAseguir.setText(selectedUser);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCliente = new javax.swing.JLabel();
        lblUsuarioAseguir = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        txtCliente = new javax.swing.JTextField();
        txtUsuarioAseguir = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstUsuarios = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstClientes = new javax.swing.JList<>();
        lblCliente1 = new javax.swing.JLabel();
        lblCliente2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(860, 471));

        lblCliente.setText("Cliente :");

        lblUsuarioAseguir.setText("Usuario a seguir :");

        btnConfirmar.setText("OK");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        txtCliente.setEditable(false);
        txtCliente.setBackground(new java.awt.Color(204, 204, 204));
        txtCliente.setColumns(10);
        txtCliente.setForeground(new java.awt.Color(0, 0, 0));

        txtUsuarioAseguir.setEditable(false);
        txtUsuarioAseguir.setBackground(new java.awt.Color(204, 204, 204));
        txtUsuarioAseguir.setColumns(10);
        txtUsuarioAseguir.setForeground(new java.awt.Color(0, 0, 0));

        lstUsuarios.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(lstUsuarios);

        lstClientes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(lstClientes);

        lblCliente1.setText("Clientes :");

        lblCliente2.setText("Usuarios :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(lblCliente1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCliente2)
                .addGap(194, 194, 194))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblUsuarioAseguir)
                                .addComponent(txtUsuarioAseguir, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                .addComponent(txtCliente))
                            .addComponent(lblCliente))
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)))
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCliente1)
                    .addComponent(lblCliente2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(lblUsuarioAseguir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtUsuarioAseguir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane4))
                .addGap(99, 99, 99))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        String nickCliente = txtCliente.getText();
        String nickAseguir = txtUsuarioAseguir.getText();
        if (nickCliente.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un nombre de usuario.");
        } else {
            if (nickCliente.equals(nickAseguir)) {
                JOptionPane.showMessageDialog(null, "Un cliente no puede seguirse a si mismo.");
            } else {
                DataCliente usr = controlCli.consultarPerfilCliente(nickCliente);
                if (usr != null) {
                    DataCliente usr2 = controlCli.consultarPerfilCliente(nickCliente);
                    if (usr2 != null) {
                        if (controlCli.corroborarSiEstaenSeguidos(nickCliente, nickAseguir) == false) {
                            controlCli.seguirUsuario(nickCliente, nickAseguir);
                            JOptionPane.showMessageDialog(null, "Seguimiento realizado con exito.");
                            reiniciarCampos();
                        } else {
                            JOptionPane.showMessageDialog(null, "El usuario " + txtCliente.getText() + " ya sigue a " + txtUsuarioAseguir.getText());
                            reiniciarCampos();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Usuario a seguir no encontrado");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Cliente no encontrado");
                }
            }
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed
    public void cargarClientesLst(Collection<DataCliente> cole) {
        DefaultListModel<String> model;
        model = new DefaultListModel<>();
        for (DataCliente elemento : cole) {
            String nick = elemento.getNickname();
            model.addElement(nick);
        }
        lstClientes.setModel(model);
    }

    public void cargarUsuariosLst(Collection<String> cole) {
        DefaultListModel<String> model;
        model = new DefaultListModel<>();
        for (String elemento : cole) {
            String nick = elemento;
            model.addElement(nick);
        }
        lstUsuarios.setModel(model);
    }
    
    public void reiniciarCampos(){
        txtCliente.setText(null);
        txtUsuarioAseguir.setText(null);
        selectedClient = null;
        selectedUser = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblCliente1;
    private javax.swing.JLabel lblCliente2;
    private javax.swing.JLabel lblUsuarioAseguir;
    private javax.swing.JList<String> lstClientes;
    private javax.swing.JList<String> lstUsuarios;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtUsuarioAseguir;
    // End of variables declaration//GEN-END:variables
}
